apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appDatabase.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appDatabase.name }}
spec:
  replicas: {{ .Values.appDatabase.replicaCount }}
  selector:
    matchLabels:
      appName: {{ .Values.appDatabase.name }}
  template:
    metadata:
      labels:
        appName: {{ .Values.appDatabase.name }}
    spec:
      containers:
      - name: {{ .Values.appDatabase.name }}
        image: {{ .Values.appDatabase.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.appDatabase.containerPort }}
        envFrom:
        - secretRef:
            name: {{ .Values.bdPostgres.name }}-secret
        - configMapRef:
            name: {{ .Values.appDatabase.name }}-configmap
        env:
        - name: DATABASE_URI
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@{{ .Values.bdPostgres.name }}-service:{{ .Values.bdPostgres.containerPort }}/$(POSTGRES_DB)
      tolerations: 
      - key: "disk"
        operator: "Equal"
        value: "ssh"
        effect: "NoSchedule"