apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.bdPostgres.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.bdPostgres.name }}
spec:
  replicas: {{ .Values.bdPostgres.replicaCount }}
  selector:
    matchLabels:
      appName: {{ .Values.bdPostgres.name }}
  template:
    metadata:
      labels:
        appName: {{ .Values.bdPostgres.name }}
    spec:
      containers:
      - name: {{ .Values.bdPostgres.name }}
        image: {{ .Values.bdPostgres.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.bdPostgres.containerPort }}
        envFrom:
        - secretRef:
            name: {{ .Values.bdPostgres.name }}-secret
        command: ['sh', '-c', 'psql -U username -d mydatabase -f /init_scripts/init.sql']
        volumeMounts:
        - name: {{ .Values.bdPostgres.volumeMountName }}
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /init_scripts/
      volumes:
      - name: {{ .Values.bdPostgres.volumeMountName }}
        persistentVolumeClaim:
          claimName: {{ .Values.namespace }}-volumen-postgres
      - name: init-scripts
        configMap:
          name: {{ .Values.bdPostgres.name }}-configmap